{"version":3,"file":"index-CSRZCHDn.js","sources":["../../js/main.js"],"sourcesContent":["const API_URL = import.meta.env.VITE_API_URL || 'https://api.seu-dominio.workers.dev/api';\r\nlet map = null;\r\nlet markersLayer = null;\r\n\r\n// Função para fazer login\r\nasync function login(teamCode) {\r\n    try {\r\n        const response = await fetch(`${API_URL}/validate-team`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ team_code: teamCode })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Código de equipe inválido');\r\n        }\r\n\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token);\r\n        localStorage.setItem('team_code', teamCode);\r\n        \r\n        document.getElementById('login-container').classList.add('hidden');\r\n        document.getElementById('map-container').classList.remove('hidden');\r\n        \r\n        initMap();\r\n        loadOrders();\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n}\r\n\r\n// Função para fazer logout\r\nfunction logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('team_code');\r\n    \r\n    if (map) {\r\n        map.remove();\r\n        map = null;\r\n    }\r\n    \r\n    document.getElementById('map-container').classList.add('hidden');\r\n    document.getElementById('login-container').classList.remove('hidden');\r\n}\r\n\r\n// Função para inicializar o mapa\r\nfunction initMap() {\r\n    if (map) return;\r\n    \r\n    map = L.map('map').setView([-23.550520, -46.633308], 12);\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors'\r\n    }).addTo(map);\r\n    \r\n    markersLayer = L.layerGroup().addTo(map);\r\n}\r\n\r\n// Função para carregar as ordens de serviço\r\nasync function loadOrders() {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            logout();\r\n            return;\r\n        }\r\n\r\n        const response = await fetch(`${API_URL}/orders`, {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                logout();\r\n                return;\r\n            }\r\n            throw new Error('Erro ao carregar ordens de serviço');\r\n        }\r\n\r\n        const geojsonData = await response.json();\r\n        displayOrders(geojsonData);\r\n    } catch (error) {\r\n        alert(error.message);\r\n    }\r\n}\r\n\r\n// Função para exibir as ordens no mapa\r\nfunction displayOrders(geojsonData) {\r\n    if (!map || !markersLayer) return;\r\n    \r\n    markersLayer.clearLayers();\r\n    \r\n    L.geoJSON(geojsonData, {\r\n        pointToLayer: (feature, latlng) => {\r\n            const status = feature.properties.status;\r\n            const color = status === 'pendente' ? 'red' : 'green';\r\n            \r\n            return L.circleMarker(latlng, {\r\n                radius: 8,\r\n                fillColor: color,\r\n                color: '#fff',\r\n                weight: 1,\r\n                opacity: 1,\r\n                fillOpacity: 0.8\r\n            });\r\n        },\r\n        onEachFeature: (feature, layer) => {\r\n            const props = feature.properties;\r\n            layer.bindPopup(`\r\n                <strong>OS:</strong> ${props.ordem_servico}<br>\r\n                <strong>Status:</strong> ${props.status}<br>\r\n                <strong>Equipe:</strong> ${props.equipe}\r\n            `);\r\n        }\r\n    }).addTo(markersLayer);\r\n    \r\n    // Ajusta o zoom para mostrar todos os pontos\r\n    const bounds = markersLayer.getBounds();\r\n    if (bounds.isValid()) {\r\n        map.fitBounds(bounds);\r\n    }\r\n}\r\n\r\n// Event Listeners\r\ndocument.getElementById('login-form').addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const teamCode = document.getElementById('team-code').value;\r\n    login(teamCode);\r\n});\r\n\r\ndocument.getElementById('logout-btn').addEventListener('click', logout);\r\n\r\n// Verificar se já está logado\r\nconst token = localStorage.getItem('token');\r\nif (token) {\r\n    document.getElementById('login-container').classList.add('hidden');\r\n    document.getElementById('map-container').classList.remove('hidden');\r\n    initMap();\r\n    loadOrders();\r\n} "],"names":["API_URL","map","markersLayer","login","teamCode","response","data","initMap","loadOrders","error","logout","token","geojsonData","displayOrders","feature","latlng","color","layer","props","bounds","e"],"mappings":"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"}